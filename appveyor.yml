image: Visual Studio 2015

environment:
  PYTHON_VERSION: "2.7.x"
  PYTHON_ARCH: "32"
  APPVEYOR_SAVE_CACHE_ON_ERROR: true

  matrix:
    # See: http://www.appveyor.com/docs/installed-software#python
    - TOXENV: pydef
    - TOXENV: flake8
    - TOXENV: docs
    - TOXENV: trial
    - TOXENV: pygtkui
    - TOXENV: plugins
    - PYTHON_VERSION: "2.7.x"
      compiler: msvc-14.0
      model: 32
      python: 1
      crypto: openssl
      bjam: 1

pull_requests:
  do_not_increment_build_number: true

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  - "python -m pip install --upgrade pip"

  - if NOT DEFINED TOXENV (
      pip install bbfreeze pefile tox pywin32 slimit twisted[tls] chardet mako pyxdg pillow slimit pygame
    )

  - if DEFINED TOXENV (
      pip install tox pywin32
    )

  - if not exist pygtk-all-in-one-2.24.2.win32-py2.7.msi (
      ECHO "Downloading pygtk...."
      & appveyor-retry appveyor DownloadFile "https://ftp.gnome.org/pub/GNOME/binaries/win32/pygtk/2.24/pygtk-all-in-one-2.24.2.win32-py2.7.msi"
    )

  - ECHO "Installing pygtk...."
  - cmd: msiexec /i pygtk-all-in-one-2.24.2.win32-py2.7.msi /quiet /qn /norestart TARGETDIR=C:\Python27 INSTALLLEVEL=3
  - if not exist openssl-1.1.0f-vs2008.7z (
      ECHO "Downloading openssl...."
      & appveyor-retry appveyor DownloadFile "https://www.npcglib.org/~stathis/downloads/openssl-1.1.0f-vs2008.7z"
    )

  - ECHO "Installing openssl...."
  - "7z x -oc:\\ -aoa openssl-1.1.0f-vs2008.7z"
  - "rename c:\\openssl-1.1.0f-vs2008 openssl-1.1"
  - "copy c:\\openssl-1.1\\bin\\libsslMD.dll c:\\openssl-1.1\\bin\\libssl-1_1.dll"
  - "copy c:\\openssl-1.1\\bin\\libcryptoMD.dll c:\\openssl-1.1\\bin\\libcrypto-1_1.dll"

  - if not exist libtorrent.pyd (
      ECHO "Downloading libtorrent...."
      & appveyor-retry appveyor DownloadFile "https://github.com/doadin/libtorrent/releases/download/1.1.7.test/libtorrent.pyd"
    )

  - ECHO "Installing libtorrent...."
  - "copy /Y libtorrent.pyd c:\\Python27\\Lib\\site-packages\\libtorrent.pyd"
  - "SET PATH=%TOXENV%;%PYTHON%;%PYTHON%\\Scripts;c:\\openssl-1.1\\bin;C:\\Program Files (x86)\\NSIS;%PATH%"

  - ECHO "Python Verison"
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - ECHO "libtorrent Verison"
  - "python -c \"import libtorrent; print(libtorrent.__version__)\""
  - ECHO "OpenSSL Verison"
  - openssl version -v

  - if not defined include ( set include="" )
  - git clone https://github.com/arvidn/libtorrent.git
  - cd libtorrent
  - set ROOT_DIRECTORY=%CD%
  - cd %ROOT_DIRECTORY%
  - git checkout tags/libtorrent_1_2_0
  - set compiler=msvc-14.0
  - set crypto=openssl
  - set linkflags=""
  - set BOOST_ROOT=c:\Libraries\boost_1_69_0
  - set BOOST_BUILD_PATH=%BOOST_ROOT%\tools\build
  - echo %BOOST_ROOT%
  - echo %BOOST_BUILD_PATH%
  - set PATH=%PATH%;%BOOST_BUILD_PATH%
  - ps: '"using msvc : 14.0 ;`nusing gcc ;`nusing python : 2.7 : c:\\Python27 : c:\\Python27\\include : c:\\Python27\\libs ;`n" | Set-Content $env:HOMEDRIVE\$env:HOMEPATH\user-config.jam'
  - type %HOMEDRIVE%%HOMEPATH%\user-config.jam
  - cd %ROOT_DIRECTORY%
  - set PATH=c:\msys64\mingw32\bin;%PATH%
  - g++ --version
  - set PATH=c:\Python27;%PATH%
  - set PYTHON_INTERPRETER=c:\Python27\python.exe
  - python --version
  - echo %ROOT_DIRECTORY%
  - cd %BOOST_BUILD_PATH%
  - bootstrap.bat >nul
  - cd %ROOT_DIRECTORY%
  - cd %ROOT_DIRECTORY%\bindings\python
  - b2.exe --hash openssl-version=pre1.1 warnings=all warnings-as-errors=on -j2 %compiler% address-model=%model% picker-debugging=on invariant-checks=full %linkflags% %include% link=shared crypto=%crypto% libtorrent-link=shared stage_module stage_dependencies
  - cmake -DCMAKE_CXX_STANDARD=11 -Dbuild_tests=ON -Dbuild_examples=ON -Dbuild_tools=ON -Dpython-bindings=%python% -Dboost-python-module-name="python" -Dskip-python-runtime-test=true -DPython_ADDITIONAL_VERSIONS="2.7" -G "Visual Studio 15 2017 Win32" .. &&
    cmake --build . --config Release --parallel %NUMBER_OF_PROCESSORS% -- -verbosity:minimal

cache:
  - pygtk-all-in-one-2.24.2.win32-py2.7.msi
  - openssl-1.1.0f-vs2008.7z
  - '%LOCALAPPDATA%\pip\cache'
  - libtorrent.pyd

build: false

test_script:
  - if defined TOXENV tox

after_test:
  - if not defined TOXENV python setup.py build
  - if not defined TOXENV python setup.py install
  - ls %APPVEYOR_BUILD_FOLDER%
  - cd %APPVEYOR_BUILD_FOLDER%\\packaging\\win32
  - if not defined TOXENV deluge-bbfreeze.py debug
  - if not defined TOXENV makensis %APPVEYOR_BUILD_FOLDER%\\packaging\\win32\\deluge-win32-installer.nsi

artifacts:
  - path: packaging\win32\build-win32\*.exe

#on_success:
#
